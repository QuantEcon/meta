name: Build Cache [using jupyter-book] - Modernized
on:
  schedule:
    # Execute cache weekly at 3am on Monday
    - cron:  '0 3 * * 1'
  workflow_dispatch:
jobs:
  cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Anaconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          auto-activate-base: true
          miniconda-version: 'latest'
          python-version: "3.13"
          environment-file: environment.yml
          activate-environment: quantecon
      
      # Use GitHub's native caching to store and retrieve build cache
      - name: Cache jupyter-book build
        uses: actions/cache@v4
        with:
          path: _build
          key: jupyter-book-${{ runner.os }}-${{ hashFiles('lectures/**', 'environment.yml') }}
          restore-keys: |
            jupyter-book-${{ runner.os }}-
      
      - name: Build HTML
        shell: bash -l {0}
        run: |
          jb build lectures --path-output ./ -W --keep-going
      
      - name: Upload Execution Reports
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: execution-reports
          path: _build/html/reports
      
      # Save the build cache using GitHub's caching mechanism
      # The cache is automatically saved at the end of the job
      # if the cache key doesn't exist and there were no cache hits
      - name: Cache status
        run: |
          echo "Build cache has been updated and saved to GitHub cache"
          echo "Cache key: jupyter-book-${{ runner.os }}-${{ hashFiles('lectures/**', 'environment.yml') }}"